{
	"info": {
		"_postman_id": "a23d93e2-8ae4-4fe8-a10f-bbe2adc6d225",
		"name": "usersApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "team/v1/userId",
			"description": "",
			"item": [
				{
					"name": "Pass Valid User Id and Valid Payload details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07d16ef4-e1b4-42a2-8c59-b5120c0d0f03",
								"type": "text/javascript",
								"exec": [
									"// Verification of Status Code",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Verification of Content Type",
									"tests[\"Content-Type should be application/json  \"] = responseHeaders.hasOwnProperty(\"Content-Type\") && 'application/json; charset=utf-8' === responseHeaders['Content-Type'];",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"familyName\": \"FirstName\",\r\n  \"homePhone\": \"HomeName\",\r\n  \"alternateEmail\": \"jkapadia0210@gems.sw.rim.net\",\r\n  \"givenName\": \"GivenName\",\r\n  \"workPhone\": \"8866688666\",\r\n  \"department\": \"Automation QA Department\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/team/v1/user/{{User_Id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"v1",
								"user",
								"{{User_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pass Invalid User Id and Valid Payload details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "560e06d1-0e70-460a-92af-6a528da11023",
								"type": "text/javascript",
								"exec": [
									"// Verification of Status Code",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"familyName\": \"FirstName\",\r\n  \"homePhone\": \"HomeName\",\r\n  \"alternateEmail\": \"jkapadia0210@gems.sw.rim.net\",\r\n  \"givenName\": \"GivenName\",\r\n  \"workPhone\": \"8866688666\",\r\n  \"department\": \"Automation QA Department\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/team/v1/user/ArdVWmuKlBlOBGQT2eyLxCA",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"v1",
								"user",
								"ArdVWmuKlBlOBGQT2eyLxCA"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Info by passing the valid userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d75ee6f7-7b88-446e-9f01-c213c198a9a3",
								"type": "text/javascript",
								"exec": [
									"// Verification of Status Code",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Verification of Content Type",
									"tests[\"Content-Type should be application/json  \"] = responseHeaders.hasOwnProperty(\"Content-Type\") && 'application/json; charset=utf-8' === responseHeaders['Content-Type'];"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/team/v1/user/{{User_Id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"v1",
								"user",
								"{{User_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Info by passing the invalid userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5300a414-126d-4855-919f-9d7e7065b3c5",
								"type": "text/javascript",
								"exec": [
									"// Verification of Status Code",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"// Verification of Content Type",
									"tests[\"Content-Type should be application/json  \"] = responseHeaders.hasOwnProperty(\"Content-Type\") && 'application/json; charset=utf-8' === responseHeaders['Content-Type'];"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/team/v1/user/ArdVWmuKlBlOBGQT2eyLxCA",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"v1",
								"user",
								"ArdVWmuKlBlOBGQT2eyLxCA"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "team/v1/user/avatar",
			"description": "",
			"item": [
				{
					"name": "Upload avatar with valid payload details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5e49bbf-daa2-47c5-8abb-c4f42b35ff8c",
								"type": "text/javascript",
								"exec": [
									"// Verification of Status Code",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Store UserId",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"User_Id\", jsonData.userId);",
									"",
									"//Store Email",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"email\", jsonData.email);",
									"",
									"// Verification of Content Type",
									"tests[\"Content-Type should be application/json  \"] = responseHeaders.hasOwnProperty(\"Content-Type\") && 'application/json; charset=utf-8' === responseHeaders['Content-Type'];",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"avatar\": {{avatar-image}}\r\n}"
						},
						"url": {
							"raw": "{{url}}/team/v1/user/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"v1",
								"user",
								"avatar"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}